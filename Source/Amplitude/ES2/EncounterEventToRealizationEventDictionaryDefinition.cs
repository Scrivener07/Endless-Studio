//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8762
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Xml.Serialization;

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 


/// <remarks/>
[System.Xml.Serialization.XmlIncludeAttribute(typeof(EncounterEventToRealizationEventDictionary))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DatatableElement : object, System.ComponentModel.INotifyPropertyChanged {
    
    private string nameField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string Name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
            this.RaisePropertyChanged("Name");
        }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected void RaisePropertyChanged(string propertyName) {
        System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if ((propertyChanged != null)) {
            propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class EncounterEventToRealizationEventDefinition : object, System.ComponentModel.INotifyPropertyChanged {
    
    private EncounterEventType encounterEventField;
    
    private string realizationEventField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public EncounterEventType EncounterEvent {
        get {
            return this.encounterEventField;
        }
        set {
            this.encounterEventField = value;
            this.RaisePropertyChanged("EncounterEvent");
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string RealizationEvent {
        get {
            return this.realizationEventField;
        }
        set {
            this.realizationEventField = value;
            this.RaisePropertyChanged("RealizationEvent");
        }
    }
    
    public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    
    protected void RaisePropertyChanged(string propertyName) {
        System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
        if ((propertyChanged != null)) {
            propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
public enum EncounterEventType {
    
    /// <remarks/>
    BattleStart,
    
    /// <remarks/>
    BattleEnd,
    
    /// <remarks/>
    PhaseStart,
    
    /// <remarks/>
    PhaseEnd,
    
    /// <remarks/>
    LastPhaseStart,
    
    /// <remarks/>
    Spawned,
    
    /// <remarks/>
    Attack_Preparation,
    
    /// <remarks/>
    Attack_Start,
    
    /// <remarks/>
    Attack_PrepareSalvoLaunched,
    
    /// <remarks/>
    Attack_SalvoLaunched,
    
    /// <remarks/>
    Attack_PostSalvoLaunched,
    
    /// <remarks/>
    Attack_HitShield,
    
    /// <remarks/>
    Attack_PrepareHitTarget,
    
    /// <remarks/>
    Attack_HitTarget,
    
    /// <remarks/>
    Attack_PostHitTarget,
    
    /// <remarks/>
    Attack_Miss,
    
    /// <remarks/>
    Attack_TargetLost,
    
    /// <remarks/>
    Attack_End,
    
    /// <remarks/>
    EnterArea,
    
    /// <remarks/>
    ExitArea,
    
    /// <remarks/>
    MedalGained,
    
    /// <remarks/>
    ComputeEndBattleStatus,
    
    /// <remarks/>
    Healing_Prepare,
    
    /// <remarks/>
    Healing,
    
    /// <remarks/>
    BattleFinalization,
    
    /// <remarks/>
    Deactivation,
    
    /// <remarks/>
    Destruction,
    
    /// <remarks/>
    DestructionComplete,
    
    /// <remarks/>
    Squadron_MatchCreated_Duel,
    
    /// <remarks/>
    Squadron_MatchCreated_Chase,
    
    /// <remarks/>
    Squadron_MatchCreated_Assault,
    
    /// <remarks/>
    Squadron_MatchImminent_Duel,
    
    /// <remarks/>
    Squadron_MatchImminent_Chase,
    
    /// <remarks/>
    Squadron_MatchImminent_Assault,
    
    /// <remarks/>
    Squadron_MatchAction_PrepareAttack,
    
    /// <remarks/>
    Squadron_MatchAction_Attack,
    
    /// <remarks/>
    Squadron_MatchAction_Hit,
    
    /// <remarks/>
    Squadron_MatchAction_PostAttack,
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=true)]
public partial class EncounterEventToRealizationEventDictionary : DatatableElement {
    
    private EncounterEventToRealizationEventDefinition[] encounterEventToRealizationEventField;
    
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("EncounterEventToRealizationEvent", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public EncounterEventToRealizationEventDefinition[] EncounterEventToRealizationEvent {
        get {
            return this.encounterEventToRealizationEventField;
        }
        set {
            this.encounterEventToRealizationEventField = value;
            this.RaisePropertyChanged("EncounterEventToRealizationEvent");
        }
    }
}
